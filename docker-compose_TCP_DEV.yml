################################################################################
# The source code contained or described herein and all documents related to
# the source code ("Material") are owned by Intel Corporation. Title to the
# Material remains with Intel Corporation.
#
# No license under any patent, copyright, trade secret or other intellectual
# property right is granted to or conferred upon you by disclosure or delivery of
# the Materials, either expressly, by implication, inducement, estoppel or otherwise.
################################################################################

version: '3.6'

services:

  #----Start: EIS Base Images -- This Base images must be included for building any EIS servcies ----
  # Define ia_eisbase service
  ia_eisbase:
    build:
      context: $PWD/../common
      dockerfile: $PWD/../common/dockerfiles/Dockerfile.eisbase
      args:
          UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
          EIS_VERSION: ${EIS_VERSION}
    image: ${DOCKER_REGISTRY}ia_eisbase:${EIS_VERSION}

  ## Define ia_common service
  ia_common:
    depends_on:
      - ia_eisbase
    build:
      context: $PWD/../common
      dockerfile: $PWD/../common/dockerfiles/Dockerfile.common
      args:
          EIS_VERSION: ${EIS_VERSION}
          # set CMAKE_BUILD_TYPE value to "Debug" to generate debug symbols
          CMAKE_BUILD_TYPE: "Release"
    read_only: true
    image: ${DOCKER_REGISTRY}ia_common:${EIS_VERSION}

  #----End: EIS Base Images---- -- This Base images must be included for building any EIS servcies ----

  # Define ETCD UI service - must be included to view ETCD data over web UI
  ia_etcd_ui:
    build:
      context: $PWD/../EtcdUI
      dockerfile: $PWD/../EtcdUI/Dockerfile
      args:
        ETCD_KEEPER_VERSION: ${ETCD_KEEPER_VERSION}
        EIS_VERSION: ${EIS_VERSION}
    image: ${DOCKER_REGISTRY}ia_etcd_ui:${EIS_VERSION}
    container_name: ia_etcd_ui
    hostname: ia_etcd_ui
    network_mode: host
    restart: unless-stopped
    environment:
      AppName: "EtcdUi"
      DEV_MODE: ${DEV_MODE}
    user: ${EIS_UID}

 # UWC containers
 # 1. modbus-tcp-master
 # 2. modbus-rtu-master
 # 3. mqtt_container
 # 4. mqtt-export

  modbus-tcp-master:
    depends_on:
      - ia_eisbase
    build:
      context: $PWD/../modbus-master/
      dockerfile: $PWD/../modbus-master/Dockerfile
      args:
        EIS_VERSION: ${EIS_VERSION}
        EIS_UID: ${EIS_UID}
        EIS_USER_NAME: ${EIS_USER_NAME}
    image: ${DOCKER_REGISTRY}modbus-master:${EIS_VERSION}
    container_name: modbus-tcp-master
    hostname: modbus-tcp-master
    network_mode: host
    restart: unless-stopped
    environment:
      AppName: "TCP1"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${no_proxy}
      Log4cppPropsFile: "/opt/intel/config/log4cpp.properties"
      ZMQ_RECV_HWM: "1000"
      MY_APP_ID: 1
      RESPONSE_TIMEOUT: 250
      INTERFRAME_DELAY: 1
      CertType: "zmq"
      PROFILING_MODE: ${PROFILING_MODE}
      Clients: "MQTT_Export"
      SITE_LIST_FILE_NAME: "site_list.yml"
      PubTopics: "TCP1_PolledData,TCP1_PolledData_RT,TCP1_RdResp,TCP1_RdResp_RT,TCP1_WrResp,TCP1_WrResp_RT"
      SubTopics: "MQTT_Export/MQTT_Export_RdReq,MQTT_Export/MQTT_Export_RdReq_RT,MQTT_Export/MQTT_Export_WrReq,MQTT_Export/MQTT_Export_WrReq_RT"
      # non-realtime topics
      PolledData: "TCP1_PolledData"
      ReadResponse: "TCP1_RdResp"
      WriteResponse: "TCP1_WrResp"
      TCP1_PolledData_cfg: "zmq_tcp,127.0.0.1:5000"
      TCP1_RdResp_cfg: "zmq_tcp,127.0.0.1:5001"
      TCP1_WrResp_cfg: "zmq_tcp,127.0.0.1:5002"
      ReadRequest: "MQTT_Export_RdReq"
      WriteRequest: "MQTT_Export_WrReq"
      MQTT_Export_RdReq_cfg: "zmq_tcp,127.0.0.1:5003"
      MQTT_Export_WrReq_cfg: "zmq_tcp,127.0.0.1:5004"
      # realtime topics
      PolledData_RT: "TCP1_PolledData_RT"
      ReadResponse_RT: "TCP1_RdResp_RT"
      WriteResponse_RT: "TCP1_WrResp_RT"
      TCP1_PolledData_RT_cfg: "zmq_tcp,127.0.0.1:5005"
      TCP1_RdResp_RT_cfg: "zmq_tcp,127.0.0.1:5006"
      TCP1_WrResp_RT_cfg: "zmq_tcp,127.0.0.1:5007"
      ReadRequest_RT: "MQTT_Export_RdReq_RT"
      WriteRequest_RT: "MQTT_Export_WrReq_RT"
      MQTT_Export_RdReq_RT_cfg: "zmq_tcp,127.0.0.1:5008"
      MQTT_Export_WrReq_RT_cfg: "zmq_tcp,127.0.0.1:5009"
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    volumes:
      - "${EIS_INSTALL_PATH}/uwc_data:/opt/intel/eis/uwc_data"
    user: ${EIS_UID}

  modbus-rtu-master:
    depends_on:
      - ia_eisbase
    build:
      context: $PWD/../modbus-master/
      dockerfile: $PWD/../modbus-master/Dockerfile_RTU
      args:
        EIS_VERSION: ${EIS_VERSION}
        EIS_UID: ${EIS_UID}
        EIS_USER_NAME: ${EIS_USER_NAME}
    image: ${DOCKER_REGISTRY}modbus-rtu-master:${EIS_VERSION}
    container_name: modbus-rtu-master
    hostname: modbus-rtu-master
    network_mode: host
    restart: unless-stopped
    environment:
      AppName: "RTU1"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${no_proxy}
      Log4cppPropsFile: "/opt/intel/config/log4cpp.properties"
      ZMQ_RECV_HWM: "1000"
      RESPONSE_TIMEOUT: 250
      INTERFRAME_DELAY: 1
      SERIAL_PORT_RETRY_INTERVAL: 1
      BAUD_RATE: 9600
      PARITY: 1
      PORT_NAME: "/dev/ttyUSB0"
      STOPBIT: 1
      MY_APP_ID: 2
      CertType: "zmq"
      PROFILING_MODE: ${PROFILING_MODE}
      Clients: "MQTT_Export"
      SITE_LIST_FILE_NAME: "site_list.yml"
      PubTopics: "RTU1_PolledData,RTU1_RdResp,RTU1_WrResp,RTU1_PolledData_RT,RTU1_RdResp_RT,RTU1_WrResp_RT"
      SubTopics: "MQTT_Export/MQTT_Export_RdReq,MQTT_Export/MQTT_Export_WrReq,MQTT_Export/MQTT_Export_RdReq_RT,MQTT_Export/MQTT_Export_WrReq_RT"
      # non-realtime topics
      PolledData: "RTU1_PolledData"
      ReadResponse: "RTU1_RdResp"
      WriteResponse: "RTU1_WrResp"
      RTU1_PolledData_cfg: "zmq_tcp,127.0.0.1:5010"
      RTU1_RdResp_cfg: "zmq_tcp,127.0.0.1:5011"
      RTU1_WrResp_cfg: "zmq_tcp,127.0.0.1:5012"
      ReadRequest: "MQTT_Export_RdReq"
      WriteRequest: "MQTT_Export_WrReq"
      MQTT_Export_RdReq_cfg: "zmq_tcp,127.0.0.1:5003"
      MQTT_Export_WrReq_cfg: "zmq_tcp,127.0.0.1:5004"
      # realtime topics
      PolledData_RT: "RTU1_PolledData_RT"
      ReadResponse_RT: "RTU1_RdResp_RT"
      WriteResponse_RT: "RTU1_WrResp_RT"
      RTU1_PolledData_RT_cfg: "zmq_tcp,127.0.0.1:5013"
      RTU1_RdResp_RT_cfg: "zmq_tcp,127.0.0.1:5014"
      RTU1_WrResp_RT_cfg: "zmq_tcp,127.0.0.1:5015"
      ReadRequest_RT: "MQTT_Export_RdReq_RT"
      WriteRequest_RT: "MQTT_Export_WrReq_RT"
      MQTT_Export_RdReq_RT_cfg: "zmq_tcp,127.0.0.1:5008"
      MQTT_Export_WrReq_RT_cfg: "zmq_tcp,127.0.0.1:5009"
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    volumes:
      - "${EIS_INSTALL_PATH}/uwc_data:/opt/intel/eis/uwc_data"
    user: ${EIS_UID}
    devices:
      - /dev:/dev
    privileged: true

  mqtt_container:
    depends_on:
      - ia_eisbase
    build:
      context: $PWD/../MQTT/
      dockerfile: $PWD/../MQTT/Dockerfile
      args:
        EIS_VERSION: ${EIS_VERSION}
        EIS_UID: ${EIS_UID}
    image: ${DOCKER_REGISTRY}mqtt_container:${EIS_VERSION}
    container_name: mqtt_container
    hostname: mqtt_container
    network_mode: host
    restart: unless-stopped
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    environment:
      AppName: "MQTT"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${no_proxy}
    user: ${EIS_UID}

  mqtt-export:
    depends_on:
      - ia_eisbase
    build:
      context: $PWD/../mqtt-export/
      dockerfile: $PWD/../mqtt-export/Dockerfile
      args:
        EIS_VERSION: ${EIS_VERSION}
        EIS_UID: ${EIS_UID}
        EIS_USER_NAME: ${EIS_USER_NAME}
    image: ${DOCKER_REGISTRY}mqtt-export:${EIS_VERSION}
    container_name: mqtt-export
    hostname: mqtt-export
    network_mode: host
    restart: unless-stopped
    environment:
      AppName: "MQTT_Export"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${no_proxy}
      Log4cppPropsFile: "/opt/intel/config/log4cpp.properties"
      ZMQ_RECV_HWM: "1000" 
      MQTT_URL_FOR_EXPORT: "tcp://127.0.0.1:1883"
      CertType: "zmq"
      PROFILING_MODE: ${PROFILING_MODE}
      Clients: "TCP1,RTU1"
      SubTopics: "TCP1/TCP1_PolledData,TCP1/TCP1_RdResp,TCP1/TCP1_WrResp,RTU1/RTU1_PolledData,RTU1/RTU1_RdResp,RTU1/RTU1_WrResp,TCP1/TCP1_PolledData_RT,TCP1/TCP1_RdResp_RT,TCP1/TCP1_WrResp_RT,RTU1/RTU1_PolledData_RT,RTU1/RTU1_RdResp_RT,RTU1/RTU1_WrResp_RT"
      PubTopics: "MQTT_Export_RdReq,MQTT_Export_WrReq,MQTT_Export_RdReq_RT,MQTT_Export_WrReq_RT"
      # non-realtime topics
      TCP1_PolledData_cfg: "zmq_tcp,127.0.0.1:5000"
      TCP1_RdResp_cfg: "zmq_tcp,127.0.0.1:5001"
      TCP1_WrResp_cfg: "zmq_tcp,127.0.0.1:5002"
      RTU1_PolledData_cfg: "zmq_tcp,127.0.0.1:5010"
      RTU1_RdResp_cfg: "zmq_tcp,127.0.0.1:5011"
      RTU1_WrResp_cfg: "zmq_tcp,127.0.0.1:5012"
      ReadRequest: "MQTT_Export_RdReq"
      WriteRequest: "MQTT_Export_WrReq"
      MQTT_Export_RdReq_cfg: "zmq_tcp,127.0.0.1:5003"
      MQTT_Export_WrReq_cfg: "zmq_tcp,127.0.0.1:5004"
      # realtime topics
      TCP1_PolledData_RT_cfg: "zmq_tcp,127.0.0.1:5005"
      TCP1_RdResp_RT_cfg: "zmq_tcp,127.0.0.1:5006"
      TCP1_WrResp_RT_cfg: "zmq_tcp,127.0.0.1:5007"
      RTU1_PolledData_RT_cfg: "zmq_tcp,127.0.0.1:5013"
      RTU1_RdResp_RT_cfg: "zmq_tcp,127.0.0.1:5014"
      RTU1_WrResp_RT_cfg: "zmq_tcp,127.0.0.1:5015"
      ReadRequest_RT: "MQTT_Export_RdReq_RT"
      WriteRequest_RT: "MQTT_Export_WrReq_RT"
      MQTT_Export_RdReq_RT_cfg: "zmq_tcp,127.0.0.1:5008"
      MQTT_Export_WrReq_RT_cfg: "zmq_tcp,127.0.0.1:5009"
      # general topics
      mqtt_SubReadTopic: "/+/+/+/read"
      mqtt_SubWriteTopic: "/+/+/+/write"
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    user: ${EIS_UID}
