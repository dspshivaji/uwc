#********************************************************************************
# The source code contained or described herein and all documents related to 
# the source code ("Material") are owned by Intel Corporation. Title to the 
# Material remains with Intel Corporation.
#
# No license under any patent, copyright, trade secret or other intellectual
# property right is granted to or conferred upon you by disclosure or delivery of
# the Materials, either expressly, by implication, inducement, estoppel or otherwise.
#*********************************************************************************

ARG EIS_VERSION
FROM ia_eisbase:$EIS_VERSION as eisbase
LABEL description="Common library container"
ARG EIS_UID

FROM ia_common:$EIS_VERSION as common

# build openssl library
FROM ia_common:$EIS_VERSION as openssl-build
ARG OPENSSL_DIR=openssl

RUN mkdir -p ${OPENSSL_DIR} \
    && cd ${OPENSSL_DIR} \
    && wget https://www.openssl.org/source/openssl-1.1.1g.tar.gz \
    && tar -xzvf openssl-1.1.1g.tar.gz > /dev/null 2>&1 \
    && cd openssl-1.1.1g \
    && ./config --prefix=/usr/ssl shared -fPIC no-tests  \
    && make install_sw -s 

# Build Paho C Library
FROM eisbase as build-pahoc
RUN mkdir -p /usr/paho-c

COPY --from=openssl-build /usr/ssl /usr/
RUN git clone --branch v1.3.5 https://github.com/eclipse/paho.mqtt.c.git \
    &&	cd paho.mqtt.c \
    &&	mkdir build && cd build \
    &&	cmake -DPAHO_WITH_SSL=TRUE -DPAHO_BUILD_STATIC:BOOL=OFF \
        -DPAHO_BUILD_SAMPLES:BOOL=OFF -DPAHO_BUILD_SHARED:BOOL=ON \
        -DCMAKE_INSTALL_PREFIX=/usr/paho-c -DBUILD_TESTS:BOOL=OFF .. \
    &&	make -s \
    &&	make install

# Build Paho CPP Library
FROM ia_common:$EIS_VERSION
COPY --from=build-pahoc /usr/paho-c /usr/.
COPY --from=openssl-build /usr/ssl /usr/ssl

RUN wget https://github.com/eclipse/paho.mqtt.cpp/blob/f3a2a52259b5463ab50eee6d1c033cba18d6e84b/src/token.cpp?raw=true -P /tmp/ \
	&& wget https://github.com/eclipse/paho.mqtt.cpp/blob/f3a2a52259b5463ab50eee6d1c033cba18d6e84b/src/async_client.cpp?raw=true -P /tmp/ \
	&& wget https://github.com/eclipse/paho.mqtt.cpp/blob/f3a2a52259b5463ab50eee6d1c033cba18d6e84b/src/mqtt/async_client.h?raw=true -P /tmp/ \
	&& mv /tmp/'token.cpp?raw=true' /tmp/token.cpp \
	&& mv /tmp/'async_client.cpp?raw=true' /tmp/async_client.cpp \
	&& mv /tmp/'async_client.h?raw=true' /tmp/async_client.h

RUN git clone --branch v1.1 https://github.com/eclipse/paho.mqtt.cpp.git \
    && rm paho.mqtt.cpp/src/async_client.cpp && cp /tmp/async_client.cpp paho.mqtt.cpp/src/ \
    && rm paho.mqtt.cpp/src/mqtt/async_client.h && cp /tmp/async_client.h paho.mqtt.cpp/src/mqtt/ \ 
    && rm paho.mqtt.cpp/src/token.cpp && cp /tmp/token.cpp paho.mqtt.cpp/src/ \       
    && cd paho.mqtt.cpp \
    && mkdir build && cd build \
    && cmake -DPAHO_WITH_SSL=TRUE -DPAHO_MQTT_C_PATH=/usr/paho-c \
	-DCMAKE_INSTALL_PREFIX=/usr/paho-cpp -DOPENSSL_ROOT_DIR=/usr/ssl -DPAHO_BUILD_SAMPLES:BOOL=OFF \
	-DBUILD_TESTS=OFF  -DPAHO_BUILD_SHARED:BOOL=ON .. \
    && make -s \
    && make install \
    && rm -rf /tmp/*

WORKDIR /EIS
RUN wget https://sourceforge.net/projects/log4cpp/files/latest/download/log4cpp-1.1.3.tar.gz \
    && tar -zxvf log4cpp-1.1.3.tar.gz \
    && cd log4cpp && mkdir build \
    && ./configure --enable-static=no --prefix=$PWD/build \
    && make \
    && make install

RUN git clone --branch yaml-cpp-0.6.3 https://github.com/jbeder/yaml-cpp.git \
    && cd yaml-cpp \
    &&	mkdir build && cd build \
    &&	cmake -DYAML_BUILD_SHARED_LIBS=ON ../ \
    &&	make yaml-cpp \
    &&	mkdir -p /usr/yaml \
    &&  mkdir -p /usr/yaml/lib \
    &&  cp lib* /usr/yaml/lib \
    &&  cp -r ../include /usr/yaml \
    && cd ../../

COPY uwc_util /uwc_util/.

RUN	cp -r /usr/yaml/include/* /uwc_util/include/yaml-cpp/ \
	&& cp -r /usr/yaml/lib/* /uwc_util/lib/ \
 	&& cp -r /EIS/log4cpp/build/include/* /uwc_util/include/ \
	&& cp -r /EIS/log4cpp/build/lib/* /uwc_util/lib/ \
	&& cp -r /usr/paho-cpp/include/mqtt /usr/local/include/mqtt \
	&& cp -r /usr/ssl/lib/* /usr/local/lib/ \
	&& cp -r /usr/ssl/include/* /usr/local/include/ \
	&& cp -r /usr/paho-cpp/lib/lib* /uwc_util/lib/ \
	&& cp -r /usr/lib/libpaho* /uwc_util/lib/

# compile wuc-lib sources
RUN cd /uwc_util/Release \
    &&	export LD_LIBRARY_PATH='/uwc_util/lib' \
	#:/bin/yaml-cpp/lib' \
    #&&  export INCLUDE_DIR='/bin' \
    &&	make clean all -s
