Index: EtcdUI/Dockerfile
===================================================================
--- EtcdUI/Dockerfile	(revision 2105)
+++ EtcdUI/Dockerfile	(working copy)
@@ -34,8 +34,8 @@
     apt-get update && apt-get install -y procps
 
 ARG EIS_UID
-RUN chown -R ${EIS_UID}:${EIS_UID} /var/log/nginx/ && \
-    chown -R ${EIS_UID}:${EIS_UID} /var/lib/nginx/
+# RUN chown -R ${EIS_UID}:${EIS_UID} /var/log/nginx/ && \
+#    chown -R ${EIS_UID}:${EIS_UID} /var/lib/nginx/
 
 
 FROM ia_common:$EIS_VERSION as common
@@ -53,8 +53,8 @@
 RUN touch /run/nginx.pid
 
 ARG EIS_UID
-RUN chown -R ${EIS_UID}:${EIS_UID} /run/nginx.pid && \
-    ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log && \
+#RUN chown -R ${EIS_UID}:${EIS_UID} /run/nginx.pid && \
+RUN ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log && \
     rm -rf /var/lib/nginx && ln -sf /tmp/nginx /var/lib/nginx && \
     rm -f /etc/nginx/sites-enabled/default
 
Index: common/libs/ConfigManager/c/src/env_config.c
===================================================================
--- common/libs/ConfigManager/c/src/env_config.c	(revision 2105)
+++ common/libs/ConfigManager/c/src/env_config.c	(working copy)
@@ -27,7 +27,7 @@
 #include "eis/config_manager/env_config.h"
 #include <safe_str_lib.h>
 
-#define SIZE 500
+#define SIZE 1000
 #define PUB "pub"
 #define SUB "sub"
 #define CLIENTS_ENV "Clients"
Index: docker_setup/.env
===================================================================
--- docker_setup/.env	(revision 2105)
+++ docker_setup/.env	(working copy)
@@ -12,7 +12,8 @@
 
 # Docker security
 EIS_USER_NAME=eisuser
-EIS_UID=5319
+EIS_UID=500000
+EIS_CONTAINER_UID=0
 
 # This is the path where EIS package is installed
 EIS_INSTALL_PATH=/opt/intel/eis
@@ -50,7 +51,7 @@
 
 # Etcd settings
 # Etcd client host to connect to
-ETCD_HOST=
+ETCD_HOST=ia_etcd
 ETCD_NAME=master
 ETCD_VERSION=v3.4.0
 ETCD_DATA_DIR=/EIS/etcd/data/
@@ -65,4 +66,5 @@
 TLS_CIPHERS=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
 SSL_KEY_LENGTH=3072
 
-HOST_TIME_ZONE=
+HOST_IP=127.0.0.1
+HOST_TIME_ZONE=Asia/Kolkata
Index: docker_setup/provision/config/etcd_pre_load.json
===================================================================
--- docker_setup/provision/config/etcd_pre_load.json	(revision 2105)
+++ docker_setup/provision/config/etcd_pre_load.json	(working copy)
@@ -1,137 +1,10 @@
 {
-    "/VideoIngestion/config": {
-        "encoding": {
-            "type": "jpeg",
-            "level": 96
-        },
-        "ingestor": {
-            "type": "opencv",
-            "pipeline": "./test_videos/pcb_d2000.avi",
-            "loop_video": "true",
-            "queue_size": 10,
-            "poll_interval": 0.2
-        },
-        "max_jobs": 20,
-        "max_workers":4,
-        "udfs": [{
-            "name": "pcb.pcb_filter",
-            "type": "python",
-            "scale_ratio": 4,
-            "training_mode": "false",
-            "n_total_px": 300000,
-            "n_left_px": 1000,
-            "n_right_px": 1000
-        }]
-    },
-    "/VideoAnalytics/config": {
-        "encoding": {
-            "type": "jpeg",
-            "level": 95
-        },
-        "queue_size": 10,
-        "max_jobs": 20,
-        "max_workers":4,
-        "udfs": [{
-            "name": "pcb.pcb_classifier",
-            "type": "python",
-            "ref_img": "common/udfs/python/pcb/ref/ref.png",
-            "ref_config_roi": "common/udfs/python/pcb/ref/roi_2.json",
-            "model_xml": "common/udfs/python/pcb/ref/model_2.xml",
-            "model_bin": "common/udfs/python/pcb/ref/model_2.bin",
-            "device": "CPU"
-        }]
-    },
-    "/Visualizer/config": {
-        "display": "true",
-        "save_image": "false",
-        "labels" : {
-            "camera1_stream_results": {
-                "0": "MISSING",
-                "1": "SHORT"
-            },
-            "camera2_stream_results":{
-                "1": "safety_helmet",
-                "2": "safety_jacket",
-                "3": "Safe",
-                "4": "Violation"
-            }
-        }
-    },
-    "/WebVisualizer/config": {
-        "username": "admin",
-        "password": "admin@123",
-        "port": 5000,
-        "labels" : {
-            "camera1_stream_results": {
-                "0": "MISSING",
-                "1": "SHORT"
-            },
-            "camera2_stream_results":{
-                "1": "safety_helmet",
-                "2": "safety_jacket",
-                "3": "Safe",
-                "4": "Violation"
-            }
-        }
-    },
-    "/InfluxDBConnector/config": {
-        "influxdb": {
-            "retention": "1h30m5s",
-            "username": "admin",
-            "password": "admin123",
-            "dbname": "datain",
-            "ssl": "True",
-            "verifySsl": "False",
-            "port": "8086"
-        },
-        "pub_workers": "5",
-        "sub_workers": "5",
-        "ignore_keys": [ "defects" ],
-        "tag_keys": []
-    },
-    "/Kapacitor/config": {
-        "influxdb": {
-            "username": "admin",
-            "password": "admin123"
-        }
-    },
-    "/FactoryControlApp/config": {
-        "io_module_ip": "localhost",
-        "io_module_port": 502,
-        "red_bit_register": 20,
-        "green_bit_register": 19
-    },
-    "/ImageStore/config": {
-        "minio": {
-            "accessKey": "admin",
-            "secretKey": "password",
-            "retentionTime": "1h",
-            "retentionPollInterval": "60s",
-            "ssl": "false"
-        }
-    },
-    "/RestDataExport/config": {
-        "camera1_stream_results": "http://localhost:8082",
-        "camera1_stream": "http://localhost:8082",
-        "http_server_ca": "/opt/intel/eis/cert.pem",
-        "rest_export_server_host": "localhost",
-        "rest_export_server_port": "8087"
-    },
-    "/GlobalEnv/": {
+    "/GlobalEnv/": 
+    {
         "PY_LOG_LEVEL": "INFO",
         "GO_LOG_LEVEL": "INFO",
         "C_LOG_LEVEL": "INFO",
         "GO_VERBOSE": "0",
         "ETCD_KEEPER_PORT": "7070"
-    },
-    "/TLS_RemoteAgent/config": {
-        "cert_path": "",
-        "tls_host": "localhost",
-        "user_labels": [{
-            "VideoAnalytics": {
-                "0": "D_MISSING",
-                "1": "D_SHORT"
-            }
-        }]
     }
 }
Index: docker_setup/provision/config/x509_cert_config.json
===================================================================
--- docker_setup/provision/config/x509_cert_config.json	(revision 2105)
+++ docker_setup/provision/config/x509_cert_config.json	(working copy)
@@ -10,7 +10,16 @@
        "root": {
          "client_alt_name": ""
        }
-     }
+     },
+    {
+        "mymqttcerts": {
+
+         "server_alt_name": "",
+
+        "client_alt_name": ""
+
+       }
+    }
    ]
  }
- 
\ No newline at end of file
+ 
Index: docker_setup/provision/dep/Dockerfile
===================================================================
--- docker_setup/provision/dep/Dockerfile	(revision 2105)
+++ docker_setup/provision/dep/Dockerfile	(working copy)
@@ -1,12 +1,13 @@
 FROM python:3.7-slim
 RUN  apt update && \
-     apt install -y curl
+     apt install -y curl etcd-client
 ARG ETCD_VERSION
 RUN mkdir -p /EIS/etcd/data
 RUN curl -L https://github.com/coreos/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz -o /EIS/etcd-${ETCD_VERSION}-linux-amd64.tar.gz && \
-    tar -xvf /EIS/etcd-${ETCD_VERSION}-linux-amd64.tar.gz -C /EIS/etcd --strip 1 && \
+    tar -xvf /EIS/etcd-${ETCD_VERSION}-linux-amd64.tar.gz -C /EIS/etcd --no-same-owner --strip 1 && \
     rm -f /EIS/etcd-${ETCD_VERSION}-linux-amd64.tar.gz
 WORKDIR /EIS/etcd/
 COPY dep/start_etcd.sh .
 RUN chmod +x start_etcd.sh
+HEALTHCHECK NONE
 ENTRYPOINT ["./start_etcd.sh"]
Index: docker_setup/provision/dep/Dockerfile.provision
===================================================================
--- docker_setup/provision/dep/Dockerfile.provision	(revision 2105)
+++ docker_setup/provision/dep/Dockerfile.provision	(working copy)
@@ -10,4 +10,5 @@
 RUN chmod +x etcd_create_user.sh && \
     chmod +x etcd_enable_auth.sh && \
     chmod +x put_x509_certs.sh
-ENTRYPOINT ["python3", "etcd_provision.py", "docker-compose.yml"]
\ No newline at end of file
+HEALTHCHECK NONE
+ENTRYPOINT ["python3", "etcd_provision.py", "docker-compose.yml"]
Index: docker_setup/provision/dep/docker-compose-provision.yml
===================================================================
--- docker_setup/provision/dep/docker-compose-provision.yml	(revision 2105)
+++ docker_setup/provision/dep/docker-compose-provision.yml	(working copy)
@@ -16,6 +16,7 @@
       ETCDCTL_API: 3
       DEV_MODE: $DEV_MODE
       ETCD_DATA_DIR: $ETCD_DATA_DIR
+      ETCD_HOST: $ETCD_HOST
       ETCD_CLIENT_PORT: $ETCD_CLIENT_PORT
       ETCD_PEER_PORT: $ETCD_PEER_PORT
       ETCD_NAME: $ETCD_NAME
@@ -27,8 +28,18 @@
       https_proxy: $https_proxy
     volumes:
       - "vol_etcd:$ETCD_DATA_DIR"
-    network_mode: host
     user: $EIS_UID
+    # userns_mode: host
+    security_opt:
+      - no-new-privileges
+    healthcheck:
+      test:
+      - CMD-SHELL
+      - etcdctl --cacert=/run/secrets/ca_etcd --cert=/run/secrets/etcd_server_cert --key=/run/secrets/etcd_server_key endpoint health || exit 1
+    ulimits:
+      nofile:
+        soft: "20000"
+        hard: "40000"
     
   ia_etcd_provision:
     depends_on:
@@ -43,17 +54,31 @@
     read_only: true
     image: ia_etcd_provision:$EIS_VERSION
     volumes:
-      - "../config:/EIS/etcd/config/"
-      - "../docker-compose.yml:/EIS/etcd/docker-compose.yml"
+      - "../config:/EIS/etcd/config/:Z"
+      - "../docker-compose.yml:/EIS/etcd/docker-compose.yml:Z"
     environment:
       ETCDCTL_API: 3
+      ETCD_HOST: $ETCD_HOST
+      ETCD_CLIENT_PORT: $ETCD_CLIENT_PORT
       DEV_MODE: ${DEV_MODE}
       no_proxy: $eis_no_proxy
       NO_PROXY: $eis_no_proxy
       http_proxy: $http_proxy
       https_proxy: $https_proxy
-    network_mode: host
     user: $EIS_UID
+    userns_mode: host
+    security_opt:
+      - no-new-privileges
+    healthcheck:
+      disable: true
+    ulimits:
+      nofile:
+        soft: "20000"
+        hard: "40000"
+networks:
+  default:
+    external:
+      name: uwc_nw
 
 volumes:
   vol_etcd:
Index: docker_setup/provision/dep/etcd_create_user.sh
===================================================================
--- docker_setup/provision/dep/etcd_create_user.sh	(revision 2105)
+++ docker_setup/provision/dep/etcd_create_user.sh	(working copy)
@@ -1,8 +1,8 @@
 #!/bin/sh
-./etcdctl user add $1 --no-password
-./etcdctl role add $1
-./etcdctl user grant-role $1 $1
-./etcdctl role grant-permission $1 read /$1/ --prefix
-./etcdctl role grant-permission $1 readwrite /$1/datastore --prefix
-./etcdctl role grant-permission $1 read /Publickeys/ --prefix
-./etcdctl role grant-permission $1 read /GlobalEnv/ --prefix
+./etcdctl --endpoints=$ETCD_HOST:$ETCD_CLIENT_PORT user add $1 --no-password
+./etcdctl --endpoints=$ETCD_HOST:$ETCD_CLIENT_PORT role add $1
+./etcdctl --endpoints=$ETCD_HOST:$ETCD_CLIENT_PORT user grant-role $1 $1
+./etcdctl --endpoints=$ETCD_HOST:$ETCD_CLIENT_PORT role grant-permission $1 read /$1/ --prefix
+./etcdctl --endpoints=$ETCD_HOST:$ETCD_CLIENT_PORT role grant-permission $1 readwrite /$1/datastore --prefix
+./etcdctl --endpoints=$ETCD_HOST:$ETCD_CLIENT_PORT role grant-permission $1 read /Publickeys/ --prefix
+./etcdctl --endpoints=$ETCD_HOST:$ETCD_CLIENT_PORT role grant-permission $1 read /GlobalEnv/ --prefix
Index: docker_setup/provision/dep/etcd_enable_auth.sh
===================================================================
--- docker_setup/provision/dep/etcd_enable_auth.sh	(revision 2105)
+++ docker_setup/provision/dep/etcd_enable_auth.sh	(working copy)
@@ -1,5 +1,5 @@
 #!/bin/sh
-./etcdctl user add root:$1
-./etcdctl role add root
-./etcdctl user grant-role root root
-./etcdctl auth enable
\ No newline at end of file
+./etcdctl --endpoints=$ETCD_HOST:$ETCD_CLIENT_PORT user add root:$1
+./etcdctl --endpoints=$ETCD_HOST:$ETCD_CLIENT_PORT role add root
+./etcdctl --endpoints=$ETCD_HOST:$ETCD_CLIENT_PORT user grant-role root root
+./etcdctl --endpoints=$ETCD_HOST:$ETCD_CLIENT_PORT auth enable
Index: docker_setup/provision/dep/etcd_provision.py
===================================================================
--- docker_setup/provision/dep/etcd_provision.py	(revision 2105)
+++ docker_setup/provision/dep/etcd_provision.py	(working copy)
@@ -68,6 +68,7 @@
     public_key, secret_key = zmq.curve_keypair()
     str_public_key = public_key.decode()
     str_secret_key = secret_key.decode()
+    etcd_endpoint = "--endpoints=" + os.environ['ETCD_HOST'] + ":" + os.environ['ETCD_CLIENT_PORT']
     while str_public_key[0] is "-" or str_secret_key[0] is "-":
         logging.info("Re-generating ZMQ keys")
         public_key, secret_key = zmq.curve_keypair()
@@ -74,12 +75,12 @@
         str_public_key = public_key.decode()
         str_secret_key = secret_key.decode()
     try:
-        subprocess.run(["./etcdctl", "put",
+        subprocess.run(["./etcdctl", etcd_endpoint, "put",
                         "/Publickeys/" + appname, public_key])
     except Exception:
         logging.error("Error putting Etcd public key for" + appname)
     try:
-        subprocess.run(["./etcdctl", "put",
+        subprocess.run(["./etcdctl", etcd_endpoint, "put",
                         "/" + appname + "/private_key", secret_key])
     except Exception:
         logging.error("Error putting Etcd private key for" + appname)
@@ -97,25 +98,26 @@
     :param file: Full path of json file having etcd initial data
     :type file: String
     """
+    etcd_endpoint = "--endpoints=" + os.environ['ETCD_HOST'] + ":" + os.environ['ETCD_CLIENT_PORT']
     with open(file, 'r') as f:
         config = json.load(f)
     logging.info("=======Adding key/values to etcd========")
     for key, value in config.items():
         if isinstance(value, str):
-            subprocess.run(["./etcdctl", "put", key, bytes(value.encode())])
+            subprocess.run(["./etcdctl", etcd_endpoint, "put", key, bytes(value.encode())])
         elif isinstance(value, dict) and key == '/GlobalEnv/':
             # Adding DEV_MODE from env
             value['DEV_MODE'] = os.environ['DEV_MODE']
-            subprocess.run(["./etcdctl", "put",
+            subprocess.run(["./etcdctl", etcd_endpoint, "put",
                            key,
                            bytes(json.dumps(value, indent=4).encode())])
         elif isinstance(value, dict):
-            subprocess.run(["./etcdctl", "put",
+            subprocess.run(["./etcdctl", etcd_endpoint, "put",
                             key, bytes(json.dumps(value, indent=4).encode())])
 
     logging.info("=======Reading key/values to etcd========")
     for key in config.keys():
-        value = subprocess.run(["./etcdctl", "get", key])
+        value = subprocess.run(["./etcdctl", etcd_endpoint, "get", key])
         logging.info(key, '->', value)
 
 
Index: docker_setup/provision/dep/start_etcd.sh
===================================================================
--- docker_setup/provision/dep/start_etcd.sh	(revision 2105)
+++ docker_setup/provision/dep/start_etcd.sh	(working copy)
@@ -14,7 +14,7 @@
 	
 	export ETCD_INITIAL_ADVERTISE_PEER_URLS=https://$HOST_IP:$ETCD_PEER_PORT
 	export ETCD_LISTEN_PEER_URLS=https://$HOST_IP:$ETCD_PEER_PORT
-	export ETCD_LISTEN_CLIENT_URLS=https://$HOST_IP:$ETCD_CLIENT_PORT,https://127.0.0.1:$ETCD_CLIENT_PORT
+	export ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:$ETCD_CLIENT_PORT
 	export ETCD_ADVERTISE_CLIENT_URLS=https://$HOST_IP:$ETCD_CLIENT_PORT
 	export ETCD_PEER_AUTO_TLS=true
 	export ETCD_CERT_FILE="/run/secrets/etcd_server_cert"
Index: docker_setup/provision/gen_certs.py
===================================================================
--- docker_setup/provision/gen_certs.py	(revision 2105)
+++ docker_setup/provision/gen_certs.py	(working copy)
@@ -109,7 +109,7 @@
     for cert in opts["certs"]:
         print("Generating Certificate for.......... " + str(cert) + "\n\n")
         os.environ["SAN"] = \
-            "IP:127.0.0.1,DNS:localhost,URI:urn:unconfigured:application"
+            "IP:127.0.0.1,DNS:localhost,DNS:ia_etcd,URI:urn:unconfigured:application"
         for component, cert_opts in cert.items():
             if 'output_format' in cert_opts:
                 outform = cert_opts['output_format']
Index: docker_setup/provision/provision_eis.sh
===================================================================
--- docker_setup/provision/provision_eis.sh	(revision 2105)
+++ docker_setup/provision/provision_eis.sh	(working copy)
@@ -118,7 +118,12 @@
 			else
 				chown -R $EIS_USER_NAME:$EIS_UID Certificates/
 			fi
-
+			if [[ "$OSTYPE" == "linux-gnu"* ]]; then
+				echo ""
+			else
+				chcon -R -t container_file_t Certificates
+			fi
+			#chcon -R -t container_file_t Certificates
 			docker-compose -f dep/docker-compose-provision.yml -f dep/docker-compose-provision.override.prod.slave.yml up --build -d  ia_etcd
 	fi
 
@@ -158,6 +163,12 @@
 			docker-compose -f dep/docker-compose-provision.yml up --build -d
 		else
 			rm -rf client server
+			if [[ "$OSTYPE" == "linux-gnu"* ]]; then
+				echo ""
+			else
+				chcon -R -t container_file_t Certificates
+			fi
+			#chcon -R -t container_file_t Certificates
 			docker-compose -f dep/docker-compose-provision.yml -f dep/docker-compose-provision.override.prod.yml up --build -d
 		fi
 
